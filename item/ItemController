import express from "express";
import ItemDTO from "./ItemDTO";
import ItemDAO from "./ItemDAO";
import ItemRepository from "./ItemRepository";
import * as aws from "aws-sdk";

const router = express.Router();
aws.config.update({
    region: 'us-east-2',
    accessKeyId: process.env.AWSAccessKeyId,
    secretAccessKey: process.env.AWSSecretKey
});

router.post('/', (req, res, next) => {
    if (req.session.email) {
        const itemPayload = req.body;
        const itemDTO = new ItemDTO(
            {
                title: itemPayload.title,
                rentalDailyPrice: itemPayload.rentalDailyPrice,
                deposit: itemPayload.deposit,
                condition: itemPayload.condition,
                categories: itemPayload.categories,
                description: itemPayload.description,
                canBeDelivered: itemPayload.canBeDelivered,
                deliveryStarting: itemPayload.deliveryStarting,
                deliveryAdditional: itemPayload.deliveryAdditional,
                location: itemPayload.location,
                userEmail: req.session.email
            }
        );

        const itemDAO = ItemDAO.fromDTO(itemDTO);
        itemDAO.save()
            .then((signedRequest) => {
                res.json(signedRequest).status(201).send();
            })
            .catch(() => {
                res.status(500).send();
            });
    } else {
        res.status(401).send();
    }
});

router.get('/', (req, res, next) => {
    if (req.session.email) {
        ItemRepository.getItemsForUser(req.session.email)
            .then(items => {
                res.status(200).json(items);
            });
    } else {
        res.status(401).send();
    }
});

router.delete('/', (req, res, next) => {
    const payload = req.body;

    if (req.session.email) {
        ItemRepository.getItemById(payload.itemId).then(itemDAO => {
            return itemDAO.archive(req.session.email);
        }).then(() => {
            res.status(200).send();
        }).catch(error => {
            res.status(500).send();
            throw new Error("Error when deleting item: " + error);
        });
    } else {
        res.status(401).send();
    }
});

export default router;